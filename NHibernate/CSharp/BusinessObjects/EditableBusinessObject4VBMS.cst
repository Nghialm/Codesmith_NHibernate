<%-- 
Name: EditableBusinessObject.cst
Author: Tom DuPont
Description: Generates an editable Business Object for NHibernate.
--%>
<%@ CodeTemplate Language="C#" Src="..\Helpers\NHibernateHelper.cs" Inherits="NHibernateHelper" TargetLanguage="C#" Debug="False" Description="Generates an editable Business Object for NHibernate." %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Optional="False" Category="1a. Source Table" Description="The source table to generate from." %>
<%@ Property Name="TablePrefix" Type="System.String" Default="" Optional="True" Category="1b. Database Options" Description="A prefix that will be stripped from table names when class names are generated." %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Data" %>
<%@ Map Name="SystemCSharp" Src="System-CSharpAlias" %>
<% this.tablePrefix = TablePrefix; %>
Imports System
Imports System.ComponentModel

Public Partial Class <%= GetClassName(SourceTable) %> 
	Inherits BusinessBase(Of <%= SystemCSharp[GetBusinessBaseIdType(SourceTable).ToString()] %>)
	Implements IDataErrorInfo

#Region "Implements IDataErrorInfo"
	Public Overridable ReadOnly Property [Error]() As String Implements System.ComponentModel.IDataErrorInfo.Error
        Get
            Return Nothing
        End Get
    End Property
	
	Default Public Overridable ReadOnly Property Item(ByVal columnName As String) As String Implements System.ComponentModel.IDataErrorInfo.Item
        Get
            Dim Result As String = String.Empty
			
            Select Case columnName
			<% foreach(ColumnSchema column in SourceTable.NonKeyColumns) { %>
				<% if (!column.AllowDBNull) {%>
				Case "<%= GetPropertyName(column) %>"
					<% if (column.DataType == DbType.String) {%>
                    If String.IsNullOrEmpty(_<%= column.Name %>) Then
                        Result = "<%= column.Name %> is required"
                    End If
					If _<%= column.Name %>.Length > <%= column.Size %> Then
						Result = "<%= column.Name %> allow max length <%= column.Size %>"
					End If
					<% } %>
					<% else { %>
					Result = ""
					<% } %>
				<% } %>
			<% } %>
            End Select

            Return Result
        End Get
    End Property
#End Region
End Class
